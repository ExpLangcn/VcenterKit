import requests
from utils.output import *

class cve_2021_21985_check:

    def __init__(self, url_text, result_text, update_date):
        _url = str(url_text.text())
        if _url.endswith("/"):
            self.url = _url[:-1]
        else:
            self.url = _url
        self.result_text = result_text
        self.update_date = update_date
        if self.url == "":
            self.update_date.emit(output_format("ERROR", "What's your url?"))

    def check(self):
        try:
            headers = {
                "Accept": "*/*",
                "Content-Type": "application/json"
            }
            data = {
                "methodInput": [{
                    "type": "ClusterComputeResource",
                    "value": None,
                    "serverGuid": None
                }]
            }
            response = requests.post(f"{self.url}/ui/h5-vsan/rest/proxy/service/com.vmware.vsan.client.services.capability.VsanCapabilityProvider/getClusterCapabilityData", verify=False, headers=headers, json=data, allow_redirects=False, timeout=30)
            if '{"result":{"isDisconnected":' in response.text:
                self.update_date.emit(output_format("SUCCESS", "The vCenter system is vulnerable to CVE-2021-21985!"))
            else:
                self.update_date.emit(output_format("FAILED", "The vCenter system is not vulnerable to CVE-2021-21985.Please check the network then retry or attempt manual exploitation."))
        except Exception as e:
            self.update_date.emit(output_format("FAILED", f"Please check the network then retry. Error message: {str(e)}"))